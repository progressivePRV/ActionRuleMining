/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.actionrule;

import java.util.HashMap;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author rojatkaraditi
 */
public class ActionRuleUI extends javax.swing.JFrame {

    /**
     * Creates new form ActionRuleUI
     */
    public ActionRuleUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        errorDialog = new javax.swing.JDialog();
        errorLabel = new javax.swing.JLabel();
        okErrorButton = new javax.swing.JButton();
        dataFileButton = new javax.swing.JButton();
        AttributeFileButton = new javax.swing.JButton();
        dataFileLabel = new javax.swing.JLabel();
        attributeFileLabel = new javax.swing.JLabel();
        loadDataButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        delimeterBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        minSupportText = new javax.swing.JTextField();
        minConfidenceText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        loadedAttributes = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        decisionAttributeBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        daFromBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        daToBox = new javax.swing.JComboBox<>();
        getReaminingAttrsButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stableAttributeSelectList = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        generateActionRulesButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        stableAttributesLabel = new javax.swing.JLabel();
        resultPane = new java.awt.ScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultTextPane = new javax.swing.JTextArea();
        clearStableAttrSelection = new javax.swing.JButton();

        errorDialog.setSize(507, 107);
        errorDialog.setLocationRelativeTo(null);

        errorLabel.setText("jLabel10");

        okErrorButton.setText("OK");
        okErrorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okErrorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout errorDialogLayout = new javax.swing.GroupLayout(errorDialog.getContentPane());
        errorDialog.getContentPane().setLayout(errorDialogLayout);
        errorDialogLayout.setHorizontalGroup(
            errorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, errorDialogLayout.createSequentialGroup()
                .addContainerGap(426, Short.MAX_VALUE)
                .addComponent(okErrorButton)
                .addContainerGap())
            .addGroup(errorDialogLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(errorLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        errorDialogLayout.setVerticalGroup(
            errorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorDialogLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(errorLabel)
                .addGap(34, 34, 34)
                .addComponent(okErrorButton)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Action Rule Generator");

        dataFileButton.setText("Choose Data File");
        dataFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataFileButtonActionPerformed(evt);
            }
        });

        AttributeFileButton.setText("Choose Attribute File");
        AttributeFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttributeFileButtonActionPerformed(evt);
            }
        });

        dataFileLabel.setText("no file selected");

        attributeFileLabel.setText("no file selected");

        loadDataButton.setText("Load Data");
        loadDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDataButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Delimeter: ");

        delimeterBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ",","tab" }));
        delimeterBox.setSelectedIndex(0);
        delimeterBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delimeterBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Minimum Support: ");

        jLabel3.setText("Minimum Confidence (%): ");

        minSupportText.setEnabled(false);
        minSupportText.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                minSupportTextInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        minSupportText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minSupportTextActionPerformed(evt);
            }
        });
        minSupportText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                minSupportTextKeyPressed(evt);
            }
        });

        minConfidenceText.setEnabled(false);
        minConfidenceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minConfidenceTextActionPerformed(evt);
            }
        });
        minConfidenceText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                minConfidenceTextKeyPressed(evt);
            }
        });

        jLabel4.setText("Attributes Loaded: ");

        loadedAttributes.setText("no attributes loaded yet.");

        jLabel6.setText("Decision Attribute: ");

        decisionAttributeBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        decisionAttributeBox.setEnabled(false);
        decisionAttributeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decisionAttributeBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Decision Value");

        jLabel8.setText("From:");

        daFromBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        daFromBox.setEnabled(false);
        daFromBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daFromBoxActionPerformed(evt);
            }
        });

        jLabel9.setText("To:");

        daToBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        daToBox.setEnabled(false);
        daToBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daToBoxActionPerformed(evt);
            }
        });

        getReaminingAttrsButton.setText("Get Remaining Attributes");
        getReaminingAttrsButton.setEnabled(false);
        getReaminingAttrsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getReaminingAttrsButtonActionPerformed(evt);
            }
        });

        stableAttributeSelectList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        stableAttributeSelectList.setEnabled(false);
        stableAttributeSelectList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                stableAttributeSelectListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(stableAttributeSelectList);

        jLabel5.setText("Select Stable Attributes:");

        generateActionRulesButton.setText("Get Action Rules");
        generateActionRulesButton.setEnabled(false);
        generateActionRulesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateActionRulesButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Selected Stable Attributes:");

        stableAttributesLabel.setText("no attributes selected");

        resultTextPane.setColumns(20);
        resultTextPane.setRows(5);
        resultTextPane.setEnabled(false);
        jScrollPane2.setViewportView(resultTextPane);

        resultPane.add(jScrollPane2);

        clearStableAttrSelection.setText("Clear Selection");
        clearStableAttrSelection.setEnabled(false);
        clearStableAttrSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearStableAttrSelectionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(resultPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(349, 349, 349)
                                .addComponent(loadDataButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(297, 297, 297)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(clearStableAttrSelection)
                                    .addComponent(getReaminingAttrsButton))))
                        .addGap(0, 435, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(delimeterBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel2)
                                                            .addComponent(jLabel4))
                                                        .addGap(61, 61, 61))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(jLabel3)
                                                        .addGap(18, 18, 18)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(loadedAttributes)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(minSupportText, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(minConfidenceText, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(34, 34, 34)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel6)
                                                            .addComponent(jLabel7))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(decisionAttributeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addGap(6, 6, 6)
                                                                .addComponent(jLabel8)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(daFromBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(24, 24, 24)
                                                                .addComponent(jLabel9)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(daToBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(119, 119, 119)
                                                .addComponent(jLabel11)))
                                        .addGap(157, 157, 157))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(131, 131, 131)
                                                .addComponent(stableAttributesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(149, 149, 149)
                                                .addComponent(generateActionRulesButton)
                                                .addGap(0, 0, Short.MAX_VALUE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dataFileButton)
                                    .addComponent(AttributeFileButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dataFileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                                    .addComponent(attributeFileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataFileButton)
                    .addComponent(dataFileLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AttributeFileButton)
                    .addComponent(attributeFileLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(delimeterBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadDataButton)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(loadedAttributes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minSupportText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(decisionAttributeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minConfidenceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(daFromBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(daToBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(getReaminingAttrsButton)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(stableAttributesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearStableAttrSelection)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(generateActionRulesButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultPane, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dataFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataFileButtonActionPerformed
        // TODO add your handling code here:
        loadedAttributes.setText("no attributes loaded yet");
        minSupportText.setText("");
        minConfidenceText.setText("");
        decisionAttributeBox.removeAllItems();
        daToBox.removeAllItems();
        daFromBox.removeAllItems();
        stableAttributeSelectList.setListData(new String[0]);
        stableAttributesLabel.setText("no attributes selected");
        resultTextPane.setText("");

        minSupportText.setEnabled(false);
        minConfidenceText.setEnabled(false);
        decisionAttributeBox.setEnabled(false);
        daToBox.setEnabled(false);
        daFromBox.setEnabled(false);
        stableAttributeSelectList.setEnabled(false);
        getReaminingAttrsButton.setEnabled(false);
        generateActionRulesButton.setEnabled(false);
        clearStableAttrSelection.setEnabled(false);

        JFileChooser fileChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

        FileNameExtensionFilter filter = new FileNameExtensionFilter("txt files", "txt");
        fileChooser.setFileFilter(filter);

        int val = fileChooser.showOpenDialog(null);

        if (val == JFileChooser.APPROVE_OPTION) {
            dataFileLabel.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_dataFileButtonActionPerformed

    private void AttributeFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttributeFileButtonActionPerformed
        // TODO add your handling code here:
        loadedAttributes.setText("no attributes loaded yet");
        minSupportText.setText("");
        minConfidenceText.setText("");
        decisionAttributeBox.removeAllItems();
        daToBox.removeAllItems();
        daFromBox.removeAllItems();
        stableAttributeSelectList.setListData(new String[0]);
        stableAttributesLabel.setText("no attributes selected");
        resultTextPane.setText("");

        minSupportText.setEnabled(false);
        minConfidenceText.setEnabled(false);
        decisionAttributeBox.setEnabled(false);
        daToBox.setEnabled(false);
        daFromBox.setEnabled(false);
        stableAttributeSelectList.setEnabled(false);
        getReaminingAttrsButton.setEnabled(false);
        generateActionRulesButton.setEnabled(false);
        clearStableAttrSelection.setEnabled(false);

        JFileChooser fileChooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

        FileNameExtensionFilter filter = new FileNameExtensionFilter("txt files", "txt");
        fileChooser.setFileFilter(filter);

        int val = fileChooser.showOpenDialog(null);

        if (val == JFileChooser.APPROVE_OPTION) {
            attributeFileLabel.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_AttributeFileButtonActionPerformed

    private void delimeterBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delimeterBoxActionPerformed
        // TODO add your handling code here:
        loadedAttributes.setText("no attributes loaded yet");
        minSupportText.setText("");
        minConfidenceText.setText("");
        decisionAttributeBox.removeAllItems();
        daToBox.removeAllItems();
        daFromBox.removeAllItems();
        stableAttributeSelectList.setListData(new String[0]);
        stableAttributesLabel.setText("no attributes selected");
        resultTextPane.setText("");

        minSupportText.setEnabled(false);
        minConfidenceText.setEnabled(false);
        decisionAttributeBox.setEnabled(false);
        daToBox.setEnabled(false);
        daFromBox.setEnabled(false);
        stableAttributeSelectList.setEnabled(false);
        getReaminingAttrsButton.setEnabled(false);
        generateActionRulesButton.setEnabled(false);
        clearStableAttrSelection.setEnabled(false);
    }//GEN-LAST:event_delimeterBoxActionPerformed

    private void minConfidenceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minConfidenceTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minConfidenceTextActionPerformed

    private void getReaminingAttrsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getReaminingAttrsButtonActionPerformed
        // TODO add your handling code here:
        try {
            Double minimumConfidence = Double.parseDouble(minConfidenceText.getText());
            Integer minimumSupport = Integer.parseInt(minSupportText.getText());

            if (minimumSupport != null && minimumSupport >= 0 && minimumConfidence != null && minimumConfidence >= 0 && minimumConfidence <= 100 && decisionAttributeBox.getSelectedItem() != null && daFromBox.getSelectedItem() != null && daToBox.getSelectedItem() != null) {
                if (!daFromBox.getSelectedItem().toString().equals(daToBox.getSelectedItem().toString())) {
                    fr.setMinConfidence(minimumConfidence);
                    fr.setMinSupport(minimumSupport);
                    HashMap<String, Set<String>> attributes = fr.getAttributes();
                    String decisionAttribute = decisionAttributeBox.getSelectedItem().toString();
                    fr.setDecisionAttribute(decisionAttribute);
                    fr.setFromDecisionAttribute(daFromBox.getSelectedItem().toString());
                    fr.setToDecisionAttribute(daToBox.getSelectedItem().toString());
                    attributes.remove(decisionAttribute);
                    //String [] arr = new String [attributes.size()];
                    stableAttributeSelectList.setListData(attributes.keySet().toArray(new String[attributes.size()]));
                    stableAttributeSelectList.setEnabled(true);
                    generateActionRulesButton.setEnabled(true);
                    clearStableAttrSelection.setEnabled(true);
                } else {
                    errorLabel.setText("From and To values of decision attribute cannot be the same");
                    errorDialog.show();
                }
            } else {
                errorLabel.setText("Please fill all necessary data correctly");
                errorDialog.show();
            }
        } catch (Exception ex) {
            errorLabel.setText("Please enter correct values for support and confidence");
            errorDialog.show();
        }

    }//GEN-LAST:event_getReaminingAttrsButtonActionPerformed

    private void generateActionRulesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateActionRulesButtonActionPerformed
        // TODO add your handling code here:
        fr.setStableAttributes(stableAttributeSelectList.getSelectedValuesList());
        resultTextPane.setText(fr.getData().toString());
    }//GEN-LAST:event_generateActionRulesButtonActionPerformed

    private void loadDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDataButtonActionPerformed
        // TODO add your handling code here:
        if (attributeFileLabel.getText() != null && !attributeFileLabel.getText().equals("no file selected") && dataFileLabel.getText() != null && !dataFileLabel.getText().equals("no file selected") && delimeterBox.getSelectedItem() != null) {
            HashMap<String, Set<String>> attributes= new HashMap<>();
            try {
                fr.setAttributeFile(attributeFileLabel.getText());
                fr.setDataFile(dataFileLabel.getText());
                fr.setDelimeter(delimeterBox.getSelectedItem().toString());
                attributes = fr.getAttributes();
                
                if(attributes!=null && !attributes.isEmpty()){
                    loadedAttributes.setText(attributes.keySet().toString());
                    
                    decisionAttributeBox.removeAllItems();
                    for (String attribute : attributes.keySet()) {
                        decisionAttributeBox.addItem(attribute);
                    }
                    minSupportText.setEnabled(true);
                    minConfidenceText.setEnabled(true);
                    decisionAttributeBox.setEnabled(true);
                    daToBox.setEnabled(true);
                    daFromBox.setEnabled(true);
                    getReaminingAttrsButton.setEnabled(true);
                }
                else{
                    //alert box
                    errorLabel.setText("Incorrect Data files or delimeter provided");
                    errorDialog.show();
                }
            } catch (Exception ex) {
                //alert box
                errorLabel.setText("Incorrect Data files or delimeter provided");
                errorDialog.show();
            }
            
        } else {
            //alert box
            errorLabel.setText("Please enter all required data");
            errorDialog.show();
        }


    }//GEN-LAST:event_loadDataButtonActionPerformed

    private void decisionAttributeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decisionAttributeBoxActionPerformed
        try {
            // TODO add your handling code here:
            HashMap<String, Set<String>> attributes = fr.getAttributes();
            
            if (decisionAttributeBox != null && decisionAttributeBox.getSelectedItem() != null) {
                String selectedAttribute = decisionAttributeBox.getSelectedItem().toString();
                Set<String> attrValues = attributes.get(selectedAttribute);
                daFromBox.removeAllItems();
                daToBox.removeAllItems();
                for (String value : attrValues) {
                    daFromBox.addItem(value);
                    daToBox.addItem(value);
                }
                daFromBox.setSelectedIndex(0);
                daToBox.setSelectedIndex(0);
            }
            
            stableAttributeSelectList.setListData(new String[0]);
            stableAttributesLabel.setText("no attributes selected");
            resultTextPane.setText("");
            stableAttributeSelectList.setEnabled(false);
            generateActionRulesButton.setEnabled(false);
            clearStableAttrSelection.setEnabled(false);
        } catch (Exception ex) {
            //alert box
            errorLabel.setText("Incorrect Data files or delimeter provided");
            errorDialog.show();
        }
    }//GEN-LAST:event_decisionAttributeBoxActionPerformed

    private void stableAttributeSelectListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_stableAttributeSelectListValueChanged
        // TODO add your handling code here:
        //System.out.println(stableAttributeSelectList.getSelectedValuesList());
        stableAttributesLabel.setText(stableAttributeSelectList.getSelectedValuesList().toString());
        resultTextPane.setText("");
    }//GEN-LAST:event_stableAttributeSelectListValueChanged

    private void okErrorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okErrorButtonActionPerformed
        // TODO add your handling code here:
        errorDialog.hide();
    }//GEN-LAST:event_okErrorButtonActionPerformed

    private void minSupportTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minSupportTextActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_minSupportTextActionPerformed

    private void daFromBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daFromBoxActionPerformed
        // TODO add your handling code here:
        stableAttributeSelectList.setListData(new String[0]);
        stableAttributesLabel.setText("no attributes selected");
        resultTextPane.setText("");
        stableAttributeSelectList.setEnabled(false);
        generateActionRulesButton.setEnabled(false);
        clearStableAttrSelection.setEnabled(false);
    }//GEN-LAST:event_daFromBoxActionPerformed

    private void daToBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daToBoxActionPerformed
        // TODO add your handling code here:
        stableAttributeSelectList.setListData(new String[0]);
        stableAttributesLabel.setText("no attributes selected");
        resultTextPane.setText("");
        stableAttributeSelectList.setEnabled(false);
        generateActionRulesButton.setEnabled(false);
        clearStableAttrSelection.setEnabled(false);
    }//GEN-LAST:event_daToBoxActionPerformed

    private void minSupportTextInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_minSupportTextInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_minSupportTextInputMethodTextChanged

    private void minSupportTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_minSupportTextKeyPressed
        // TODO add your handling code here:
        stableAttributeSelectList.setListData(new String[0]);
        stableAttributesLabel.setText("no attributes selected");
        resultTextPane.setText("");
        stableAttributeSelectList.setEnabled(false);
        generateActionRulesButton.setEnabled(false);
        clearStableAttrSelection.setEnabled(false);
    }//GEN-LAST:event_minSupportTextKeyPressed

    private void minConfidenceTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_minConfidenceTextKeyPressed
        // TODO add your handling code here:
        stableAttributeSelectList.setListData(new String[0]);
        stableAttributesLabel.setText("no attributes selected");
        resultTextPane.setText("");
        stableAttributeSelectList.setEnabled(false);
        generateActionRulesButton.setEnabled(false);
        clearStableAttrSelection.setEnabled(false);

    }//GEN-LAST:event_minConfidenceTextKeyPressed

    private void clearStableAttrSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearStableAttrSelectionActionPerformed
        // TODO add your handling code here:
        stableAttributeSelectList.clearSelection();
        stableAttributesLabel.setText("no attributes selected");
        resultTextPane.setText("");

    }//GEN-LAST:event_clearStableAttrSelectionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActionRuleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActionRuleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActionRuleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActionRuleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActionRuleUI().setVisible(true);
            }
        });
    }

    FileReader fr = new FileReader();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AttributeFileButton;
    private javax.swing.JLabel attributeFileLabel;
    private javax.swing.JButton clearStableAttrSelection;
    private javax.swing.JComboBox<String> daFromBox;
    private javax.swing.JComboBox<String> daToBox;
    private javax.swing.JButton dataFileButton;
    private javax.swing.JLabel dataFileLabel;
    private javax.swing.JComboBox<String> decisionAttributeBox;
    private javax.swing.JComboBox<String> delimeterBox;
    private javax.swing.JDialog errorDialog;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton generateActionRulesButton;
    private javax.swing.JButton getReaminingAttrsButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton loadDataButton;
    private javax.swing.JLabel loadedAttributes;
    private javax.swing.JTextField minConfidenceText;
    private javax.swing.JTextField minSupportText;
    private javax.swing.JButton okErrorButton;
    private java.awt.ScrollPane resultPane;
    private javax.swing.JTextArea resultTextPane;
    private javax.swing.JList<String> stableAttributeSelectList;
    private javax.swing.JLabel stableAttributesLabel;
    // End of variables declaration//GEN-END:variables
}
